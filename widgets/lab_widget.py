import tkinter as tk
import tkinter.ttk as ttk
from pygubu.widgets.scrolledframe import ScrolledFrame


class LabWidget(ttk.Panedwindow):
    def __init__(self, master=None, **kw):
        ttk.Panedwindow.__init__(self, master, **kw)
        self.frame_buttons = ttk.Frame(self)
        self.frame_orig_or_adjusted = ttk.Frame(self.frame_buttons)
        self.cb_orig_or_adjusted = tk.Checkbutton(self.frame_orig_or_adjusted)
        self.cb_orig_or_adjusted.config(cursor='hand2', text='Adjusted')
        self.cb_orig_or_adjusted.pack(padx='5', side='top')
        self.frame_orig_or_adjusted.config(padding='2', relief='flat', width='200')
        self.frame_orig_or_adjusted.pack(anchor='w', side='left')
        self.frame_buttons.config(borderwidth='2', height='50', relief='groove')
        self.frame_buttons.pack(anchor='ne', expand='false', side='right')
        self.add(self.frame_buttons, weight='1')
        self.frame_body = ttk.Frame(self)
        self.panedwindow_body = ttk.Panedwindow(self.frame_body, orient='horizontal')
        self.scrolledframe_left = ScrolledFrame(self.panedwindow_body, scrolltype='both')
        self.notebook_frame_left = ttk.Notebook(self.scrolledframe_left.innerframe)
        self.scrolledframe_nb_imgprocessing = ScrolledFrame(self.notebook_frame_left, scrolltype='both')
        self.frame_thresh = ttk.Frame(self.scrolledframe_nb_imgprocessing.innerframe)
        self.lb_thresh = ttk.Label(self.frame_thresh)
        self.lb_thresh.config(text='Threshold:')
        self.lb_thresh.pack(side='left')
        self.lb_threshval = ttk.Label(self.frame_thresh)
        self.lb_threshval.config(text='10')
        self.lb_threshval.pack(side='left')
        self.scale_thresh = ttk.Scale(self.frame_thresh)
        self.scale_thresh.config(cursor='hand2', from_='0', orient='horizontal', to='255')
        self.scale_thresh.pack(expand='true', fill='x', side='left')
        self.scale_thresh.bind('<B1-Motion>', self.get_threshval, add='')
        self.cb_tresh = tk.Checkbutton(self.frame_thresh)
        self.cb_tresh.pack(side='left')
        self.frame_thresh.config(height='200', relief='flat', width='200')
        self.frame_thresh.pack(anchor='nw', expand='false', fill='x', padx='5', pady='10', side='top')
        self.frame_contrast = ttk.Frame(self.scrolledframe_nb_imgprocessing.innerframe)
        self.lb_contrast = ttk.Label(self.frame_contrast)
        self.lb_contrast.config(text='Contrast:')
        self.lb_contrast.pack(side='left')
        self.lb_contrastval = ttk.Label(self.frame_contrast)
        self.lb_contrastval.config(text='1.0')
        self.lb_contrastval.pack(side='left')
        self.scale_contrast = ttk.Scale(self.frame_contrast)
        self.scale_contrast.config(cursor='hand2', from_='1', orient='horizontal', to='30')
        self.scale_contrast.pack(expand='true', fill='x', padx='5', side='left')
        self.scale_contrast.bind('<B1-Motion>', self.get_contrastval, add='')
        self.cb_contrast = tk.Checkbutton(self.frame_contrast)
        self.cb_contrast.pack(expand='false', side='left')
        self.frame_contrast.config(height='200', padding='2', relief='flat', width='200')
        self.frame_contrast.pack(anchor='nw', expand='false', fill='x', padx='5', side='top')
        self.frame_brightness = ttk.Frame(self.scrolledframe_nb_imgprocessing.innerframe)
        self.lb_bright = ttk.Label(self.frame_brightness)
        self.lb_bright.config(text='Brightness:')
        self.lb_bright.pack(side='left')
        self.lb_brightval = ttk.Label(self.frame_brightness)
        self.lb_brightval.config(text='0')
        self.lb_brightval.pack(side='left')
        self.scale_bright = ttk.Scale(self.frame_brightness)
        self.scale_bright.config(cursor='hand2', from_='-126', orient='horizontal', to='126')
        self.scale_bright.pack(expand='true', fill='x', padx='5', side='left')
        self.scale_bright.bind('<B1-Motion>', self.get_brightval, add='')
        self.cb_bright = tk.Checkbutton(self.frame_brightness)
        self.cb_bright.pack(side='left')
        self.frame_brightness.config(height='200', padding='2', relief='flat', width='200')
        self.frame_brightness.pack(anchor='nw', expand='false', fill='x', padx='5', pady='10', side='top')
        self.frame_combothresh = ttk.Frame(self.scrolledframe_nb_imgprocessing.innerframe)
        self.combobox_thresh = ttk.Combobox(self.frame_combothresh)
        self.combobox_thresh.config(cursor='hand2', state='readonly')
        self.combobox_thresh.pack(padx='5', side='right')
        self.combobox_thresh.bind('<<ComboboxSelected>>', self.get_threshtype, add='')
        self.lb_combothresh = ttk.Label(self.frame_combothresh)
        self.lb_combothresh.config(text='Thresh Type')
        self.lb_combothresh.pack(side='left')
        self.frame_combothresh.config(height='200', width='200')
        self.frame_combothresh.pack(fill='x', padx='5', pady='10', side='top')
        self.frame_kernel = ttk.Frame(self.scrolledframe_nb_imgprocessing.innerframe)
        self.lb_kernel = ttk.Label(self.frame_kernel)
        self.lb_kernel.config(text='Kernel')
        self.lb_kernel.pack(padx='10', side='left')
        self.combobox_kernel = ttk.Combobox(self.frame_kernel)
        self.combobox_kernel.config(cursor='hand2', state='readonly')
        self.combobox_kernel.pack(expand='false', padx='5', side='right')
        self.combobox_kernel.bind('<<ComboboxSelected>>', self.get_kernel, add='')
        self.frame_kernel.config(height='200', width='200')
        self.frame_kernel.pack(fill='x', padx='5', pady='5', side='top')
        self.frame_colorspace = ttk.Frame(self.scrolledframe_nb_imgprocessing.innerframe)
        self.lb_colorspace = ttk.Label(self.frame_colorspace)
        self.lb_colorspace.config(font='{verdana} 10 {}', text='Colorspace')
        self.lb_colorspace.pack(padx='5', pady='5', side='left')
        self.combobox_colorspace = ttk.Combobox(self.frame_colorspace)
        self.combobox_colorspace.config(state='readonly')
        self.combobox_colorspace.pack(padx='5', pady='5', side='right')
        self.combobox_colorspace.bind('<<ComboboxSelected>>', self.get_colorspace, add='')
        self.frame_colorspace.config(height='200', relief='groove', width='200')
        self.frame_colorspace.pack(fill='x', padx='5', pady='2', side='top')
        self.frame_equalizationhist = ttk.Frame(self.scrolledframe_nb_imgprocessing.innerframe)
        self.cb_equal_hist = tk.Checkbutton(self.frame_equalizationhist)
        self.cb_equal_hist.config(cursor='hand2', font='{Verdana} 10 {}', text='Equalize Histogram')
        self.cb_equal_hist.pack(padx='2', pady='2', side='left')
        self.frame_equalizationhist.config(height='200', relief='groove', width='200')
        self.frame_equalizationhist.pack(fill='x', padx='5', pady='2', side='top')
        self.frame_morph_transf = ttk.Frame(self.scrolledframe_nb_imgprocessing.innerframe)
        self.label_morph_opr = ttk.Label(self.frame_morph_transf)
        self.label_morph_opr.config(font='{verdana} 10 {}', text='Morph. Opr.')
        self.label_morph_opr.pack(side='left')
        self.combobox_morph_opr = ttk.Combobox(self.frame_morph_transf)
        self.combobox_morph_opr.config(cursor='hand2', state='readonly')
        self.combobox_morph_opr.pack(padx='5', side='right')
        self.combobox_morph_opr.bind('<<ComboboxSelected>>', self.select_morph_opr, add='')
        self.frame_morph_transf.config(height='200', width='200')
        self.frame_morph_transf.pack(fill='x', padx='5', pady='10', side='top')
        self.frame_img_gradients = ttk.Frame(self.scrolledframe_nb_imgprocessing.innerframe)
        self.lb_img_gradient = ttk.Label(self.frame_img_gradients)
        self.lb_img_gradient.config(font='{verdana} 10 {}', text='Gradient')
        self.lb_img_gradient.pack(side='left')
        self.combobox_gradient = ttk.Combobox(self.frame_img_gradients)
        self.combobox_gradient.config(cursor='hand2', state='readonly')
        self.combobox_gradient.pack(padx='5', side='right')
        self.combobox_gradient.bind('<<ComboboxSelected>>', self.select_image_gradient, add='')
        self.frame_img_gradients.config(height='200', width='200')
        self.frame_img_gradients.pack(fill='x', padx='5', pady='10', side='top')
        self.frame_canny = ttk.Frame(self.scrolledframe_nb_imgprocessing.innerframe)
        self.cb_canny = tk.Checkbutton(self.frame_canny)
        self.cb_canny.config(cursor='hand2', font='{verdana} 10 {}', text='Canny Edge')
        self.cb_canny.pack(anchor='nw', padx='5', pady='5', side='top')
        self.lb_canny_min = ttk.Label(self.frame_canny)
        self.lb_canny_min.config(text='Min')
        self.lb_canny_min.pack(anchor='w', padx='5', pady='5', side='left')
        self.sb_canny_min = ttk.Spinbox(self.frame_canny)
        self.sb_canny_min.config(from_='0', to='126', width='10')
        self.sb_canny_min.pack(anchor='w', pady='5', side='left')
        self.lb_canny_max = ttk.Label(self.frame_canny)
        self.lb_canny_max.config(text='Max')
        self.lb_canny_max.pack(padx='5', pady='5', side='right')
        self.sb_canny_max = ttk.Spinbox(self.frame_canny)
        self.sb_canny_max.config(from_='127', to='255', width='10')
        self.sb_canny_max.pack(pady='5', side='right')
        self.frame_canny.config(height='200', relief='groove', width='200')
        self.frame_canny.pack(fill='x', padx='5', pady='10', side='top')
        self.scrolledframe_nb_imgprocessing.innerframe.config(relief='groove')
        self.scrolledframe_nb_imgprocessing.configure(usemousewheel=False)
        self.scrolledframe_nb_imgprocessing.pack(padx='2', pady='2', side='left')
        self.notebook_frame_left.add(self.scrolledframe_nb_imgprocessing, text='Image Processing')
        self.frame_nb_shot = ttk.Frame(self.notebook_frame_left)
        self.frame_materialname = ttk.Frame(self.frame_nb_shot)
        self.lb_materialname = ttk.Label(self.frame_materialname)
        self.lb_materialname.config(font='{Arial} 10 {}', text='Material Name')
        self.lb_materialname.pack(anchor='nw', padx='5', pady='2', side='top')
        self.tb_materialname = ttk.Entry(self.frame_materialname)
        self.tb_materialname.config(cursor='xterm')
        self.tb_materialname.pack(anchor='nw', expand='false', fill='x', padx='5', side='top')
        self.tb_materialname.bind('<Return>', self.get_materialname, add='')
        self.frame_materialname.config(borderwidth='2', height='200', width='200')
        self.frame_materialname.pack(anchor='nw', expand='false', fill='x', padx='5', pady='2', side='top')
        self.frame_framenumber = ttk.Frame(self.frame_nb_shot)
        self.lb_framenumber = ttk.Label(self.frame_framenumber)
        self.lb_framenumber.config(font='{Arial} 10 {}', text='Frame Number')
        self.lb_framenumber.pack(anchor='w', padx='5', pady='2', side='top')
        self.tb_framenumber = ttk.Entry(self.frame_framenumber)
        self.tb_framenumber.config(cursor='xterm')
        self.tb_framenumber.pack(anchor='w', padx='5', side='left')
        self.tb_framenumber.bind('<Return>', self.get_framenumber, add='')
        self.btn_shot = tk.Button(self.frame_framenumber)
        self.btn_shot.config(activebackground='#a3d3f8', background='#a3d3f8', borderwidth='0', cursor='hand2')
        self.btn_shot.config(font='{Verdana} 12 {bold}', text='Shot')
        self.btn_shot.pack(anchor='center', padx='5', pady='5', side='right')
        self.btn_shot.configure(command=self.shot)
        self.frame_framenumber.config(borderwidth='2', height='100', width='200')
        self.frame_framenumber.pack(anchor='nw', expand='false', fill='x', padx='5', side='top')
        self.labelframe_outdata = ttk.Labelframe(self.frame_nb_shot)
        self.text_outdata = tk.Text(self.labelframe_outdata)
        self.text_outdata.config(background='#000000', font='{Verdana} 10 {}', foreground='#cccccc', height='10')
        self.text_outdata.config(width='50')
        self.text_outdata.pack(expand='true', fill='both', side='top')
        self.labelframe_outdata.config(height='200', text='Outdata', width='200')
        self.labelframe_outdata.pack(expand='true', fill='both', side='top')
        self.frame_nb_shot.config(height='200', width='200')
        self.frame_nb_shot.pack(fill='y', side='top')
        self.notebook_frame_left.add(self.frame_nb_shot, text='Shot')
        self.notebook_frame_left.config(height='200', width='200')
        self.notebook_frame_left.pack(expand='true', fill='both', side='top')
        self.scrolledframe_left.configure(usemousewheel=False)
        self.scrolledframe_left.pack(expand='true', fill='both', side='top')
        self.panedwindow_body.add(self.scrolledframe_left, weight='1')
        self.panedwindow_images = ttk.Panedwindow(self.panedwindow_body, orient='horizontal')
        self.scrolledframe_original = ScrolledFrame(self.panedwindow_images, scrolltype='both')
        self.frame_btnuoriginal = ttk.Frame(self.scrolledframe_original.innerframe)
        self.btn_upload_original = tk.Button(self.frame_btnuoriginal)
        self.btn_upload_original.config(activebackground='#408080', activeforeground='#ffffff', background='#408080', borderwidth='0')
        self.btn_upload_original.config(cursor='hand2', font='{Verdana} 10 {}', foreground='#ffffff', padx='5')
        self.btn_upload_original.config(text='Upload Original')
        self.btn_upload_original.pack(side='left')
        self.btn_upload_original.configure(command=self.upload_original)
        self.frame_btnuoriginal.config(padding='2', width='200')
        self.frame_btnuoriginal.pack(anchor='w', fill='x', pady='10', side='top')
        self.frame_scale_orig = ttk.Frame(self.scrolledframe_original.innerframe)
        self.lb_scale_o = ttk.Label(self.frame_scale_orig)
        self.lb_scale_o.config(text='Scale %')
        self.lb_scale_o.pack(side='left')
        self.lb_scale_o_var = ttk.Label(self.frame_scale_orig)
        self.lb_scale_o_var.config(font='{Arial} 10 {bold}', text='50')
        self.lb_scale_o_var.pack(side='left')
        self.scale_orig = ttk.Scale(self.frame_scale_orig)
        self.scale_orig.config(cursor='hand2', from_='20', length='200', orient='horizontal')
        self.scale_orig.config(to='100', value='40')
        self.scale_orig.pack(padx='5', pady='5', side='left')
        self.scale_orig.bind('<B1-Motion>', self.get_scale_orig, add='')
        self.frame_scale_orig.config(padding='2', relief='groove', width='200')
        self.frame_scale_orig.pack(anchor='w', expand='true', fill='both', side='top')
        self.frame_canvas_original = ttk.Frame(self.scrolledframe_original.innerframe)
        self.canvas_original = tk.Canvas(self.frame_canvas_original)
        self.canvas_original.config(background='#408080', height='1920', width='1200')
        self.canvas_original.pack(anchor='center', expand='true', fill='both', side='bottom')
        self.frame_canvas_original.config(height='200', width='200')
        self.frame_canvas_original.pack(expand='true', fill='both', side='top')
        self.scrolledframe_original.configure(usemousewheel=True)
        self.scrolledframe_original.pack(side='top')
        self.panedwindow_images.add(self.scrolledframe_original, weight='1')
        self.scrolledframe_sample = ScrolledFrame(self.panedwindow_images, scrolltype='both')
        self.frame_btnusample = ttk.Frame(self.scrolledframe_sample.innerframe)
        self.btn_upload_sample = tk.Button(self.frame_btnusample)
        self.btn_upload_sample.config(activebackground='#005cb9', activeforeground='#ffffff', background='#005cb9', borderwidth='0')
        self.btn_upload_sample.config(cursor='hand2', font='{Verdana} 10 {}', foreground='#ffffff', text='Upload Sample')
        self.btn_upload_sample.pack(anchor='center', padx='5', side='left')
        self.btn_upload_sample.configure(command=self.upload_sample)
        self.frame_btnusample.config(padding='2', relief='flat', width='200')
        self.frame_btnusample.pack(fill='x', pady='10', side='top')
        self.frame_scale_sample = ttk.Frame(self.scrolledframe_sample.innerframe)
        self.lb_scale_s = ttk.Label(self.frame_scale_sample)
        self.lb_scale_s.config(text='Scale %')
        self.lb_scale_s.pack(side='left')
        self.lb_scale_s_var = ttk.Label(self.frame_scale_sample)
        self.lb_scale_s_var.config(font='{Arial} 10 {bold}', text='50')
        self.lb_scale_s_var.pack(side='left')
        self.scale_sample = ttk.Scale(self.frame_scale_sample)
        self.scale_sample.config(cursor='hand2', from_='20', length='200', orient='horizontal')
        self.scale_sample.config(to='100', value='40')
        self.scale_sample.pack(padx='5', pady='5', side='left')
        self.scale_sample.bind('<B1-Motion>', self.get_scale_sample, add='')
        self.frame_scale_sample.config(padding='2', relief='groove', width='200')
        self.frame_scale_sample.pack(anchor='w', expand='true', fill='both', side='top')
        self.frame_canvas_sample = ttk.Frame(self.scrolledframe_sample.innerframe)
        self.canvas_sample = tk.Canvas(self.frame_canvas_sample)
        self.canvas_sample.config(background='#005cb9', height='1200', width='1920')
        self.canvas_sample.pack(anchor='center', expand='true', fill='both', side='bottom')
        self.frame_canvas_sample.config(height='200', width='200')
        self.frame_canvas_sample.pack(side='top')
        self.scrolledframe_sample.configure(usemousewheel=False)
        self.scrolledframe_sample.pack(side='top')
        self.panedwindow_images.add(self.scrolledframe_sample, weight='1')
        self.panedwindow_images.config(height='200', width='200')
        self.panedwindow_images.pack(side='top')
        self.panedwindow_body.add(self.panedwindow_images, weight='5')
        self.panedwindow_body.pack(expand='true', fill='both', side='top')
        self.frame_body.config(borderwidth='3', height='200', relief='flat', width='200')
        self.frame_body.pack(expand='true', fill='both', side='top')
        self.add(self.frame_body, weight='16')
        self.scrolledframe_bottom = ScrolledFrame(self, scrolltype='both')
        self.frame_footer = ttk.Frame(self.scrolledframe_bottom.innerframe)
        self.notebook_footer = ttk.Notebook(self.frame_footer)
        self.txt_log = tk.Text(self.notebook_footer)
        self.txt_log.config(background='#4f4f4f', font='{verdana} 10 {}', foreground='#ffff00', height='6')
        self.txt_log.config(width='50')
        _text_ = '''output here'''
        self.txt_log.insert('0.0', _text_)
        self.txt_log.pack(side='top')
        self.notebook_footer.add(self.txt_log, text='Message Log')
        self.frame_nbcompare = ttk.Frame(self.notebook_footer)
        self.frame_path_chooser = ttk.Frame(self.frame_nbcompare)
        self.tb_orig_data_path = ttk.Entry(self.frame_path_chooser)
        self.tb_orig_data_path.config(state='disabled')
        self.tb_orig_data_path.pack(expand='true', fill='x', padx='5', pady='5', side='left')
        self.btn_choose_orig_data = tk.Button(self.frame_path_chooser)
        self.btn_choose_orig_data.config(activebackground='#a3d3f8', background='#a3d3f8', borderwidth='0', cursor='hand2')
        self.btn_choose_orig_data.config(font='{Verdana} 10 {}', text='.....')
        self.btn_choose_orig_data.pack(padx='5', pady='5', side='left')
        self.btn_choose_orig_data.configure(command=self.choose_original_data)
        self.frame_path_chooser.config(height='200', width='200')
        self.frame_path_chooser.pack(fill='x', padx='5', pady='5', side='top')
        self.frame_plotcompare = ttk.Frame(self.frame_nbcompare)
        self.frame_plotcompare.config(height='200', width='200')
        self.frame_plotcompare.pack(expand='true', fill='both', padx='5', pady='10', side='left')
        self.frame_compare_buttons = ttk.Frame(self.frame_nbcompare)
        self.frame_btncompare = ttk.Frame(self.frame_compare_buttons)
        self.btn_compare = tk.Button(self.frame_btncompare)
        self.btn_compare.config(activebackground='#232323', activeforeground='#ffffff', background='#232323', borderwidth='0')
        self.btn_compare.config(cursor='hand2', font='{Verdana} 10 {}', foreground='#ffffff', state='disabled')
        self.btn_compare.config(text='Compare')
        self.btn_compare.pack(side='top')
        self.btn_compare.configure(command=self.compare)
        self.frame_btncompare.config(height='200', width='200')
        self.frame_btncompare.pack(padx='10', pady='10', side='top')
        self.frame_compare_buttons.config(height='200', width='200')
        self.frame_compare_buttons.pack(expand='false', fill='both', padx='5', pady='5', side='right')
        self.frame_nbcompare.config(height='200', width='200')
        self.frame_nbcompare.pack(expand='true', fill='x', side='top')
        self.notebook_footer.add(self.frame_nbcompare, text='Compare')
        self.notebook_footer.config(height='200', width='200')
        self.notebook_footer.pack(expand='true', fill='both', side='bottom')
        self.frame_footer.config(height='50', width='200')
        self.frame_footer.pack(expand='true', fill='both', side='top')
        self.scrolledframe_bottom.innerframe.config(borderwidth='2', relief='groove')
        self.scrolledframe_bottom.configure(usemousewheel=False)
        self.scrolledframe_bottom.pack(side='top')
        self.add(self.scrolledframe_bottom, weight='8')

    def get_threshval(self, event=None):
        pass

    def get_contrastval(self, event=None):
        pass

    def get_brightval(self, event=None):
        pass

    def get_threshtype(self, event=None):
        pass

    def get_kernel(self, event=None):
        pass

    def get_colorspace(self, event=None):
        pass

    def select_morph_opr(self, event=None):
        pass

    def select_image_gradient(self, event=None):
        pass

    def get_materialname(self, event=None):
        pass

    def get_framenumber(self, event=None):
        pass

    def shot(self):
        pass

    def upload_original(self):
        pass

    def get_scale_orig(self, event=None):
        pass

    def upload_sample(self):
        pass

    def get_scale_sample(self, event=None):
        pass

    def choose_original_data(self):
        pass

    def compare(self):
        pass


